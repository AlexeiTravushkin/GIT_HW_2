JSON

 4. Создать внешний репозиторий c названием JSON === на github.com нажать кнопку "new"
 
 5. Клонировать репозиторий JSON на локальный компьютер === git clone https://github.com/AlexeiTravushkin/JSON.git
 
 6. Внутри локального JSON создать файл “new.json” === touch new.json
 
 7. Добавить файл под гит === git add new.json
 
 8. Закоммитить файл === git commit -m "комментарий к коммиту"
 
 9. Отправить файл на внешний GitHub репозиторий === git push
 
 10. Отредактировать содержание файла “new.json” - написать информацию о себе (ФИО, возраст, количество домашних животных, 
     будущая зарплата). Всё написать в формате JSON === редактировать файл через vim

{
   "Name": "Alexey",
   "Age": 30,
   "Home_animals": 2,
   "Salary": 150000
}
     
 11. Отправить изменения на внешний репозиторий === git commit -am "комментарий" затем git push
 
 12. Создать файл preferences.json === cat > preferences.json
 
 13. В файл preferences.json добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, 
     любимое время года, сторона которую хотели бы посетить) в формате JSON === редактировать файл через cat
     
{
  "Favorite film": "Hard_nut",
  "Favorite_serial": "la_casa_de_papel",
  "Favorite_food": "Tom_yam_soup",
  "Favorite_season": "spring", 
  "Wish_side": "San-Francisco"
}
     
 14. Создать файл sklls.json добавить информацию о скиллах которые будут изучены на курсе в формате JSON === > sklls.json 
     и редактировать 
     
{
  "skill1": "accurasy",
  "skill2": "attentiveness",
  "skill3": "Ability to ask questions",
  "skill4": "Ability to adequately describe bugs"
}
     
 15. Отправить сразу 2 файла на внешний репозиторий === git add . затем git commit -m "комментарий", затем git push
 
 16. На веб интерфейсе создать файл bug_report.json === создаем на github.com в своем репозитории файл bug_report.json
 
 17. Сделать Commit changes (сохранить) изменения на веб интерфейсе === сохранить на сайте, добавив комментарий в commit
 
 18. На веб интерфейсе модифицировать файл bug_report.json, добавить баг репорт в формате JSON === редактировать файл на сайте github
 
{
	"ID": "Just_the_number_of_bug",
	"Summary": "Short_description",
	"Environment": "Platform_OS_Browser_version",
	"Product": "The_name_jf_the_product",
	"Version": "Version_of_the_product",
   "Steps_to_reproduce": "All_steps_to_reproduce_with_exact_summary_for_each",
        "Status": "New",
	"Severity": "Minor","Major","etc",
	"Priority": "P1",
	"Expected_result": "The_result_you_expect",
	"Actual_result": "Not_need_to_be_explain",
	"Attachments": "Some_links"
}

 
 19. Сделать Commit changes (сохранить) изменения на веб интерфейсе === сохранить на сайте, добавив комментарий в commit
 
 20. Синхронизировать внешний и локальный репозиторий JSON === git pull



XML

 21. Создать внешний репозиторий c названием XML === на github.com нажать кнопку "new"
 
 22. Клонировать репозиторий XML на локальный компьютер === git clone "https://github.com/AlexeiTravushkin/XML.git"
 
 23. Внутри локального XML создать файл “new.xml” === touch new.xml
 
 24. Добавить файл под гит === git add new.xml
 
 25. Закоммитить файл === git commit -m "комментарий"
 
 26. Отправить файл на внешний GitHub репозиторий === git push 
 
 27. Отредактировать содержание файла “new.xml” - написать информацию о себе (ФИО, возраст, количество домашних животных, 
     будущая зарплата). Всё написать в формате XML === редактировать файл в vim
     
<?xml version="1.0"?>
<INFO>
<name>Alexey</name>
<lastname>Travushkin</lastname>
<number_of_pets>2</number_of_pets>
<future_salary>150000</future_salary>
</INFO>
    
     
 28. Отправить изменения на внешний репозиторий === git add . затем git commit -m "комментарий", затем git push
 
 29. Создать файл preferences.xml === touch preferences.xml
 
 30. В файл preferences.xml добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, 
     любимое время года, сторона которую хотели бы посетить) в формате XML === редактировать файл в vim

        <?xml version="1.0"?>
        <INFO>
        <favorite_movie>Hard nut</favorite_movie>
        <favorite_series>La casa de papel</favorite_series>
        <favorite_food>Tom yam soup</favorite_food>
        <favorite_season>Spring</favorite_season>
        <wish_side>San-Francisco</wish_side>      
        </INFO>

 31. Создать файл sklls.xml добавить информацию о скиллах которые будут изучены на курсе в формате XML === touch sklls.xml 
     и редакция файла в vim
        
            <?xml version="1.0"?>
              <skills>
	       <skill_1>accurasy</skill_1>
	       <skill_2>attentiveness</skill_2>
	       <skill_3>Ability to ask questions</skill_3>
	       <skill_4>Ability to adequately describe bugs</skill_4>
	      </skills>      
     
 32. Сделать коммит в одну строку === git add . | git commit -m "комментарий"
 
 33. Отправить сразу 2 файла на внешний репозиторий === git push
 
 34. На веб интерфейсе создать файл bug_report.xml === создать на github.com в своем репозитории файл bug_report.xml
 
 35. Сделать Commit changes (сохранить) изменения на веб интерфейсе === сохранить на сайте, добавив комментарий в commit
 
 36. На веб интерфейсе модифицировать файл bug_report.xml, добавить баг репорт в формате XML === редактировать файл на сайте github
 
        <?xml version="1.0"?>
        <INFO>
        <Summary>Item not added to cart</Summary>
        <Steps to reproduce>All steps to reproduce with exact summary for each</Steps to reproduce>
        <Environment>Platform,OS,Browser version</Environment>
        <Status>NEW</Status>
        <Priority>P1</Priority>
        <Severity>Minor</Severity>
        <Expected result>The result you expect</Expected result>
        <Actual result>Do not need to be explain</Actual result>
        <Attachments>Some links may be here</Attachments>
        </INFO>
 
 37. Сделать Commit changes (сохранить) изменения на веб интерфейсе === сохранить на сайте, добавив комментарий в commit.
 
 38. Синхронизировать внешний и локальный репозиторий XML === git pull
 
 
TXT

 1. Создать внешний репозиторий c названием TXT === на github.com нажать кнопку  "new"
 
 2. Клонировать репозиторий TXT на локальный компьютер === git clone "https://github.com/AlexeiTravushkin/TXT.git"
 
 3. Внутри локального TXT создать файл “new.txt” === touch new.txt
 
 4. Добавить файл под гит === git add new.txt
 
 5. Закоммитить файл === git commit -m "комментарий"
 
 6. Отправить файл на внешний GitHub репозиторий === git push 
 
 7. Отредактировать содержание файла “new.txt” - написать информацию о себе (ФИО, возраст, количество домашних животных, 
     будущая зарплата). Всё написать в формате TXT === редактировать файл в vim
     
Travushkin Alexei,
30 years old,
2 cats,
wish salary: 150000
San-Francisco  
     
 8. Отправить изменения на внешний репозиторий === git add . затем git commit -m "комментарий", затем git push 
 
 9. Создать файл preferences.txt === touch preferences.txt
 
 10. В файл preferences.txt” добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, 
     любимое время года, сторона которую хотели бы посетить) в формате TXT === редактировать файл в vim
     
Favorite film: Hard nut,
favorite serial: la casa de papel,
favorite food: fried chiken,
favorite season: spring, 
wish side: san-francisco.
     
 11. Создать файл sklls.txt добавить информацию о скиллах которые будут изучены на курсе в формате TXT === touch sklls.txt 
     и редактируем файл в vim
     
        Skills:
	       - accuracy,attentiveness,
               - ability to ask questions, 
               -ability to adequately describe bugs and more.     
     
 12. Сделать коммит в одну строку === git add . | git commit -m "комментарий"
 
 13. Отправить сразу 2 файла на внешний репозиторий === git push
 
 14. На веб интерфейсе создать файл bug_report.txt === создать на github.com в своем репозитории файл bug_report.txt
 
 15. Сделать Commit changes (сохранить) изменения на веб интерфейсе === сохранить на сайте, добавив комментарий в commit
 
 16. На веб интерфейсе модифицировать файл bug_report.txt, добавить баг репорт в формате TXT === редактировать файл на сайте github
 
Bug report for example.
                1.Bug overview:
                    - summary

                2. Environment:
                    - platform
                    - OS
                    - browser

                3. Bug details
                    - steps to reproduce
                    - expected result
                    - actual result

              4. Bug tracking:
                  - severety
                  - priority
 
 17. Сделать Commit changes (сохранить) изменения на веб интерфейсе === сохранить на сайте, добавив комментарий в commit
 
 18. Синхронизировать внешний и локальный репозиторий TXT === git pull

 Также есть все созданные репозитории,ознакомиться с которыми, можно на личной странице.
